# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.19.3"

default_platform :ios

# Custom definition variables
xcodeproj_path = "ios/AwesomeProject.xcodeproj"
android_proj_path = "android"
templates_path = "fastlane/templates"


platform :ios do
  desc "Runs all the tests"
  lane :test do
    scan
  end
end


platform :android do
end


platform :task do
  repo = "yyoshiki41/fastlane-playground"

  desc "Bump a new version"
  lane :bump_version do |options|
    case options[:type]
    when 'major'
      type = options[:type]
    when 'minor'
      type = options[:type]
    else
      type = 'patch'
    end

    # iOS
    increment_build_number(xcodeproj: xcodeproj_path)
    increment_version_number(xcodeproj: xcodeproj_path, bump_type: type)
    # Android
    increment_version_code
    increment_version_name(bump_type: type)
  end

  desc "Create a new pull request"
  private_lane :create_pr do |options|
    base = options[:base] || "develop"
    create_pull_request(
      repo: repo,
      api_token: ENV["GITHUB_TOKEN"],
      title: options[:title],
      head: options[:head],
      base: base,
      body: options[:body]
    )
  end

  desc "Create a new pull request to bump a new version"
  lane :bump do |options|
    sh "git fetch"
    sh "git checkout develop"
    sh "git pull origin develop"
    tmp_branch = "bump/tmp"
    sh "git checkout -b #{tmp_branch}"

    bump_version(options[:type])
    git_add(path: ['ios', 'android'])

    version = get_version_number(xcodeproj: xcodeproj_path)
    message = "Bump v#{version}"
    git_commit(path: ['ios', 'android'], message: message)

    head = "bump/#{version}"
    sh "git branch -m #{head}"

    push_to_git_remote(local_branch: head)
    create_pr(
      head: head,
      title: message,
      body: erb(
        template: "#{templates_path}/bump_version.rb",
        placeholders: {}
      ),
    )

    sh "git checkout -"
  end

  desc "Create a release note in draft"
  lane :create_release_note do |options|
    commitish = options[:commitish] || "develop"
    version = get_version_number(xcodeproj: xcodeproj_path)

    set_github_release(
      repository_name: repo,
      api_token: ENV["GITHUB_TOKEN"],
      name: "v#{version}",
      tag_name: "v#{version}",
      is_draft: true,
      is_prerelease: true,
      description: erb(
        template: "#{templates_path}/release_note.erb",
        placeholders: {
          :version => version
        }
      ),
      commitish: commitish
    )
  end

end
